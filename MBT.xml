<?xml version="1.0" encoding="utf-8"?>
<BMZTSpace><Code><item><txt></txt></item></Code><Object><item><typename>VFpUR1VJ</typename><data>WlRQcm9wX05hbWU9TUJUX1pUX1Jvb3QNClpUR1VJX1NlbGVjdGVkQ29sb3I9MzI3NjgNClpUR1VJX1dpZHRoPTEzNjYNClpUR1VJX0hlaWdodD03NjgNClpUR1VJX0RvdFNpemU9MTANClpUR1VJX0JhY2tDb2xvcj0wDQpaVEdVSV9JbnRlcnZhbD01MDANClpUR1VJX01vbml0ZXJQZXJjZW50PTENCg</data><prt/></item><item><typename>VFpUU3lzUnB0</typename><data>WlRQcm9wX05hbWU9WlQwDQpaVFByb3BfV2lkdGg9ODAwDQpaVFByb3BfSGVpZ2h0PTIwDQpaVFByb3BfVG9wPTUyNg0KWlRQcm9wX0xlZnQ9MTI5DQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX09LQ29sb3I9MzI3NjgNClpUUHJvcF9FcnJDb2xvcj0yNTUNCg</data><prt/></item><item><typename>VFpUSW5wdXQ</typename><data>WlRQcm9wX05hbWU9WlQyDQpaVFByb3BfV2lkdGg9MjAwDQpaVFByb3BfSGVpZ2h0PTIxDQpaVFByb3BfVG9wPTM2MQ0KWlRQcm9wX0xlZnQ9MjE4DQpaVFByb3BfRm9udD0iy87M5SIsJDAwMDAwMDAwLDEwLDAsMA0KWlRQcm9wX0JhY2tDb2xvcj0xNjc3NzIxNQ0KWlRQcm9wX1RpdGxlUG9zPWx0cExlZnQNClpUUHJvcF9UaXRsZVRleHQ9ssm8r8b3tdjWt8LrDQpaVFByb3BfVGl0bGVGb250PSLLzszlIiwkMDBGRkZGRkYsMTAsMCwwDQpaVFByb3BfSXNQYXNzd29yZD1GYWxzZQ0K</data><prt/></item><item><typename>VFpUSW5wdXQ</typename><data>WlRQcm9wX05hbWU9WlQzDQpaVFByb3BfV2lkdGg9MjAwDQpaVFByb3BfSGVpZ2h0PTIxDQpaVFByb3BfVG9wPTM5NA0KWlRQcm9wX0xlZnQ9MjE4DQpaVFByb3BfRm9udD0iy87M5SIsJDAwMDAwMDAwLDEwLDAsMA0KWlRQcm9wX0JhY2tDb2xvcj0xNjc3NzIxNQ0KWlRQcm9wX1RpdGxlUG9zPWx0cExlZnQNClpUUHJvcF9UaXRsZVRleHQ9ssm8r8b31rUNClpUUHJvcF9UaXRsZUZvbnQ9IsvOzOUiLCQwMEZGRkZGRiwxMCwwLDANClpUUHJvcF9Jc1Bhc3N3b3JkPUZhbHNlDQo</data><prt/></item><item><typename>VFpUSW5wdXQ</typename><data>WlRQcm9wX05hbWU9WlQ0DQpaVFByb3BfV2lkdGg9MjAwDQpaVFByb3BfSGVpZ2h0PTIxDQpaVFByb3BfVG9wPTQ1Nw0KWlRQcm9wX0xlZnQ9MjE3DQpaVFByb3BfRm9udD0iy87M5SIsJDAwMDAwMDAwLDEwLDAsMA0KWlRQcm9wX0JhY2tDb2xvcj0xNjc3NzIxNQ0KWlRQcm9wX1RpdGxlUG9zPWx0cExlZnQNClpUUHJvcF9UaXRsZVRleHQ91tW2y7XY1rcNClpUUHJvcF9UaXRsZUZvbnQ9IsvOzOUiLCQwMEZGRkZGRiwxMCwwLDANClpUUHJvcF9Jc1Bhc3N3b3JkPUZhbHNlDQo</data><prt/></item><item><typename>VFpUSW5wdXQ</typename><data>WlRQcm9wX05hbWU9WlQ1DQpaVFByb3BfV2lkdGg9MjAwDQpaVFByb3BfSGVpZ2h0PTIxDQpaVFByb3BfVG9wPTQyNQ0KWlRQcm9wX0xlZnQ9MjE4DQpaVFByb3BfRm9udD0iy87M5SIsJDAwMDAwMDAwLDEwLDAsMA0KWlRQcm9wX0JhY2tDb2xvcj0xNjc3NzIxNQ0KWlRQcm9wX1RpdGxlUG9zPWx0cExlZnQNClpUUHJvcF9UaXRsZVRleHQ9zfi52LXY1rcNClpUUHJvcF9UaXRsZUZvbnQ9IsvOzOUiLCQwMEZGRkZGRiwxMCwwLDANClpUUHJvcF9Jc1Bhc3N3b3JkPUZhbHNlDQo</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQ2DQpaVFByb3BfV2lkdGg9MTA1DQpaVFByb3BfSGVpZ2h0PTI3DQpaVFByb3BfVG9wPTM4NA0KWlRQcm9wX0xlZnQ9NDY0DQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX0JvYXJkPWZzUmFpc2VkDQpaVFByb3BfQWxpZ25tZW50PXRhQ2VudGVyDQpaVFByb3BfQWxpZ25tZW50Vj1hdkNlbnRlcg0KWlRQcm9wX1RleHQ9yejWtQ0KWlRQcm9wX0JhY2tDb2xvcj0wDQpaVFByb3BfQXNCdXR0b249VHJ1ZQ0KWlRQcm9wX0J0blByZXNzZWRDb2xvcj04NDIxNTA0DQpaVFByb3BfUHJlc3NlZEJvYXJkPWZzTG93ZXJlZA0KWlRQcm9wX0J0blByZXNzZWRJbnRlcj01MDANCg</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQ3DQpaVFByb3BfV2lkdGg9MTA1DQpaVFByb3BfSGVpZ2h0PTI0DQpaVFByb3BfVG9wPTQxNQ0KWlRQcm9wX0xlZnQ9NDYzDQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX0JvYXJkPWZzUmFpc2VkDQpaVFByb3BfQWxpZ25tZW50PXRhQ2VudGVyDQpaVFByb3BfQWxpZ25tZW50Vj1hdkNlbnRlcg0KWlRQcm9wX1RleHQ91sPB4w0KWlRQcm9wX0JhY2tDb2xvcj0wDQpaVFByb3BfQXNCdXR0b249VHJ1ZQ0KWlRQcm9wX0J0blByZXNzZWRDb2xvcj04NDIxNTA0DQpaVFByb3BfUHJlc3NlZEJvYXJkPWZzTG93ZXJlZA0KWlRQcm9wX0J0blByZXNzZWRJbnRlcj01MDANCg</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQ4DQpaVFByb3BfV2lkdGg9MTA0DQpaVFByb3BfSGVpZ2h0PTI2DQpaVFByb3BfVG9wPTQ0NQ0KWlRQcm9wX0xlZnQ9NDYzDQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX0JvYXJkPWZzUmFpc2VkDQpaVFByb3BfQWxpZ25tZW50PXRhQ2VudGVyDQpaVFByb3BfQWxpZ25tZW50Vj1hdkNlbnRlcg0KWlRQcm9wX1RleHQ9yejWw9bcxtoNClpUUHJvcF9CYWNrQ29sb3I9MA0KWlRQcm9wX0FzQnV0dG9uPVRydWUNClpUUHJvcF9CdG5QcmVzc2VkQ29sb3I9ODQyMTUwNA0KWlRQcm9wX1ByZXNzZWRCb2FyZD1mc0xvd2VyZWQNClpUUHJvcF9CdG5QcmVzc2VkSW50ZXI9NTAwDQo</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQ5DQpaVFByb3BfV2lkdGg9MTA2DQpaVFByb3BfSGVpZ2h0PTMwDQpaVFByb3BfVG9wPTQ3Ng0KWlRQcm9wX0xlZnQ9NDYyDQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX0JvYXJkPWZzUmFpc2VkDQpaVFByb3BfQWxpZ25tZW50PXRhQ2VudGVyDQpaVFByb3BfQWxpZ25tZW50Vj1hdkNlbnRlcg0KWlRQcm9wX1RleHQ9yejWw7LJvK+148r9wb8NClpUUHJvcF9CYWNrQ29sb3I9MA0KWlRQcm9wX0FzQnV0dG9uPVRydWUNClpUUHJvcF9CdG5QcmVzc2VkQ29sb3I9ODQyMTUwNA0KWlRQcm9wX1ByZXNzZWRCb2FyZD1mc0xvd2VyZWQNClpUUHJvcF9CdG5QcmVzc2VkSW50ZXI9NTAwDQo</data><prt/></item><item><typename>VFpUR3JpZA</typename><data>WlRQcm9wX05hbWU9WlQxMw0KWlRQcm9wX1dpZHRoPTEwMjANClpUUHJvcF9IZWlnaHQ9MjkwDQpaVFByb3BfVG9wPTU1DQpaVFByb3BfTGVmdD0xMjcNClpUUHJvcF9Gb250PSLLzszlIiwkMDBGRkZGRkYsMTAsMCwwDQpaVFByb3BfRml4ZWRGb250PSJUYWhvbWEiLCRGRjAwMDAwOCw4LDAsMA0KWlRQcm9wX0NvbENvdW50PTEwDQpaVFByb3BfUm93Q291bnQ9Mg0KWlRQcm9wX0ZpeGVkQ29sPTANClpUUHJvcF9GaXhlZFJvdz0xDQpaVFByb3BfQmFja0NvbG9yPTANClpUUHJvcF9Db2xXaWR0aHM9NTAsMTAwLDIwMCwxMDUsMTAwLDEwMCwxMDAsMTAwLDgwLDY0LA0KWlRQcm9wX0dyaWRSb3dIZWlnaHQ9MjINClpUUHJvcF9BbGlnbm1lbnRzPTIsMiwyLDIsMiwyLDIsMiwyLDIsDQpaVFByb3BfVlNCYXI9VHJ1ZQ0KWlRQcm9wX0hTQmFyPUZhbHNlDQpaVFByb3BfV29yZFdyYXA9VHJ1ZQ0K</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQxMg0KWlRQcm9wX1dpZHRoPTEwNQ0KWlRQcm9wX0hlaWdodD0yNg0KWlRQcm9wX1RvcD0zNTcNClpUUHJvcF9MZWZ0PTQ2NA0KWlRQcm9wX0ZvbnQ9IsvOzOUiLCQwMEZGRkZGRiwxMCwwLDANClpUUHJvcF9Cb2FyZD1mc0J1bXANClpUUHJvcF9BbGlnbm1lbnQ9dGFDZW50ZXINClpUUHJvcF9BbGlnbm1lbnRWPWF2Q2VudGVyDQpaVFByb3BfVGV4dD3H5bP9DQpaVFByb3BfQmFja0NvbG9yPTANClpUUHJvcF9Bc0J1dHRvbj1GYWxzZQ0KWlRQcm9wX0J0blByZXNzZWRDb2xvcj0zODAzMzENClpUUHJvcF9QcmVzc2VkQm9hcmQ9ZnNMb3dlcmVkDQpaVFByb3BfQnRuUHJlc3NlZEludGVyPTUwMA0K</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQxDQpaVFByb3BfV2lkdGg9MTk5DQpaVFByb3BfSGVpZ2h0PTIzDQpaVFByb3BfVG9wPTQ5MQ0KWlRQcm9wX0xlZnQ9MjE4DQpaVFByb3BfRm9udD0iy87M5SIsJDAwRkZGRkZGLDEwLDAsMA0KWlRQcm9wX0JvYXJkPWZzTm9uZQ0KWlRQcm9wX0FsaWdubWVudD10YUNlbnRlcg0KWlRQcm9wX0FsaWdubWVudFY9YXZDZW50ZXINClpUUHJvcF9CYWNrQ29sb3I9MA0KWlRQcm9wX0FzQnV0dG9uPUZhbHNlDQpaVFByb3BfQnRuUHJlc3NlZENvbG9yPTM4MDMzMQ0KWlRQcm9wX1ByZXNzZWRCb2FyZD1mc0xvd2VyZWQNClpUUHJvcF9CdG5QcmVzc2VkSW50ZXI9NTAwDQo</data><prt/></item><item><typename>VFpUVGV4dA</typename><data>WlRQcm9wX05hbWU9WlQxMA0KWlRQcm9wX1dpZHRoPTM3NQ0KWlRQcm9wX0hlaWdodD0yNA0KWlRQcm9wX1RvcD00ODgNClpUUHJvcF9MZWZ0PTYwNg0KWlRQcm9wX0ZvbnQ9IsvOzOUiLCQwMEZGRkZGRiwxMCwwLDANClpUUHJvcF9Cb2FyZD1mc05vbmUNClpUUHJvcF9BbGlnbm1lbnQ9dGFDZW50ZXINClpUUHJvcF9BbGlnbm1lbnRWPWF2Q2VudGVyDQpaVFByb3BfQmFja0NvbG9yPTE2NzExNjgwDQpaVFByb3BfQXNCdXR0b249RmFsc2UNClpUUHJvcF9CdG5QcmVzc2VkQ29sb3I9MzgwMzMxDQpaVFByb3BfUHJlc3NlZEJvYXJkPWZzTG93ZXJlZA0KWlRQcm9wX0J0blByZXNzZWRJbnRlcj01MDANCg</data><prt/></item></Object><Drvs/><Version><item><fileversion>2</fileversion></item></Version></BMZTSpace>